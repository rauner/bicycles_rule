edge_internalization_mapping_detailed_LCA = {"Cycle_Cycle_tmp_technology": "market for transport, passenger, bicycle",
                                             "Walk_Walk_tmp_technology": "walking",
    "Bus_tmp_vehicletype_Electric": "transport, passenger bus, battery electric - overnight charging, NCA battery, 18m articulated urban bus, " + str(bus_year),
    "Bus_tmp_vehicletype_FCEV": "transport, passenger bus, fuel cell electric, 18m articulated urban bus, " + str(bus_year),
    "Bus_tmp_vehicletype_Liquids": "transport, passenger bus, diesel, 18m articulated urban bus, "+ str(bus_year) +", EURO-VI",
    "Bus_tmp_vehicletype_NG": "transport, passenger bus, compressed gas, 18m articulated urban bus, "+ str(bus_year) +", EURO-VI",
"Compact Car_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Compact Car_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Compact Car_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Compact Car_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Compact Car_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Domestic Aviation_tmp_vehicletype_Hydrogen": 'market for transport, passengers, aircraft, short haul', 
"Domestic Aviation_tmp_vehicletype_Liquids": 'market for transport, passengers, aircraft, short haul',
"Domestic Ship_tmp_vehicletype_Liquids": "NA",
"HSR_tmp_vehicletype_Electric": "market for transport, passenger train",
"International Aviation_tmp_vehicletype_Liquids": "market for transport, passengers, aircraft, long haul",
"International Ship_tmp_vehicletype_Liquids": "NA",
"Large Car and SUV_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Large Car and SUV_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Large Car and SUV_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Large Car and SUV_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Large Car and SUV_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Large Car_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Large Car_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Large Car_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Large Car_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Large Car_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Light Truck and SUV_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Light Truck and SUV_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Light Truck and SUV_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Light Truck and SUV_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Light Truck and SUV_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Midsize Car_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Midsize Car_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Midsize Car_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Midsize Car_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Midsize Car_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Mini Car_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Mini Car_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Mini Car_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Mini Car_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Mini Car_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Moped_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Moped_Liquids": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Motorcycle (>250cc)_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Motorcycle (>250cc)_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Motorcycle (50-250cc)_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Motorcycle (50-250cc)_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Passenger Rail_tmp_vehicletype_Electric": "market for transport, passenger train",
"Passenger Rail_tmp_vehicletype_Liquids": "market for transport, passenger train",
"Subcompact Car_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Subcompact Car_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Subcompact Car_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Subcompact Car_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Subcompact Car_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Truck (0-3.5t)_Electric": "transport, passenger car, fleet average, BEV, "  + str(year),
"Truck (0-3.5t)_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Truck (0-3.5t)_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Truck (0-3.5t)_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Truck (18t)_Electric": "transport, passenger car, fleet average, BEV, "  + str(year),
"Truck (18t)_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Truck (18t)_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Truck (18t)_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Truck (26t)_Electric": "transport, passenger car, fleet average, BEV, "  + str(year),
"Truck (26t)_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Truck (26t)_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Truck (26t)_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Truck (40t)_Electric": "transport, passenger car, fleet average, BEV, "  + str(year),
"Truck (40t)_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Truck (40t)_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Truck (40t)_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Truck (7.5t)_Electric": "transport, passenger car, fleet average, BEV, "  + str(year),
"Truck (7.5t)_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Truck (7.5t)_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Truck (7.5t)_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Van_BEV": "transport, passenger car, fleet average, BEV, "  + str(year),
"Van_FCEV": "transport, passenger car, fleet average, FCEV, "   + str(year),
"Van_Hybrid Electric": "transport, passenger car, fleet average, HEV-p, "   + str(year),
"Van_Liquids": "transport, passenger car, fleet average, ICEV-p, "   + str(year),
"Van_NG": "transport, passenger car, fleet average, ICEV-g, "   + str(year),
"Freight Rail_tmp_vehicletype_Electric": "NA",
"Freight Rail_tmp_vehicletype_Liquids": "NA"}


impact_category_mapping = {
 'Road safety':  'human health',
 'Physical Activity':  'human health',
 'Noise':  'human health',
 'Microplastic tire t': 'Microplastic tire t', 
 'human toxicity':  'human health LCA', 
 'ionising radiation':  'human health LCA',
 'ozone depletion':  'human health LCA',
 'air_pollution_cost_indirect':  'air_pollution_cost',
 'air_pollution_cost_direct':  'air_pollution_cost',
 'marine ecotoxicity':  'ecosystem quality',
 'terrestrial ecotoxicity':  'ecosystem quality',
 'agricultural land occupation':  'ecosystem quality',
 'freshwater eutrophication':  'ecosystem quality',
 'marine eutrophication':  'ecosystem quality',
 'natural land transformation':  'ecosystem quality',
 'terrestrial acidification':  'ecosystem quality',
 'urban land occupation':  'ecosystem quality',
 'metal depletion': 'resources',
 'fossil depletion': 'resources'}